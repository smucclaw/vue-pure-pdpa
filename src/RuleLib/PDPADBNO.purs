

-- This file was automatically generated by natural4.
-- Do not edit by hand.
-- Instead, revise the toolchain starting at smucclaw/dsl/lib/haskell/natural4/app/Main.hs

module RuleLib.PDPADBNO where

import Prelude
import Data.Either
import Data.Maybe
import Data.Tuple
import Data.Map as Map
import Foreign.Object as Object

import AnyAll.Types

schedule1_part1 :: Item String
schedule1_part1 =

   Any
    ( Pre "any of:" )
    [ All
        ( Pre "all of:" )
        [ Any
            ( Pre "Is the Loss or Damage caused by" )
            [ Leaf "rodents ?"
            , Leaf "insects ?"
            , Leaf "vermin ?"
            , Leaf "birds ?"
            ]
        , Not
            ( Any
                ( Pre "any of:" )
                [ All
                    ( Pre "all of:" )
                    [ Leaf "is Loss or Damage to contents ?"
                    , Leaf "is Loss or Damage caused by birds ?"
                    ]
                , All
                    ( Pre "all of:" )
                    [ Leaf "is Loss or Damage ensuing covered loss ?"
                    , Not
                        ( Any
                            ( Pre "any of:" )
                            [ Leaf "does any other exclusion apply ?"
                            , Any
                                ( Pre "did an animal cause water to escape from" )
                                [ Leaf "a household appliance ?"
                                , Leaf "a swimming pool ?"
                                , Leaf "a plumbing, heating, or air conditioning system ?"
                                ]
                            ]
                        )
                    ]
                ]
            )
        ]
    ]



schedule1_part1_nl :: NLDict
schedule1_part1_nl =
  Map.fromFoldable
    [ ]
    

toplevelDecisions :: Object.Object (Item String)
toplevelDecisions = Object.fromFoldable [ Tuple "Not Covered If …"
    ( All
        ( Pre "all of:" )
        [ Not
            ( All
                ( Pre "all of:" )
                [ Any
                    ( Pre "Is the Loss or Damage caused by" )
                    [ Leaf "rodents ?"
                    , Leaf "insects ?"
                    , Leaf "vermin ?"
                    , Leaf "birds ?"
                    ]
                , Not
                    ( Any
                        ( Pre "any of:" )
                        [ All
                            ( Pre "all of:" )
                            [ Leaf "is Loss or Damage to contents ?"
                            , Leaf "is Loss or Damage caused by birds ?"
                            ]
                        , All
                            ( Pre "all of:" )
                            [ Leaf "is Loss or Damage ensuing covered loss ?"
                            , Not
                                ( Any
                                    ( Pre "any of:" )
                                    [ Leaf "does any other exclusion apply ?"
                                    , Any
                                        ( Pre "did an animal cause water to escape from" )
                                        [ Leaf "a household appliance ?"
                                        , Leaf "a swimming pool ?"
                                        , Leaf "a plumbing, heating, or air conditioning system ?"
                                        ]
                                    ]
                                )
                            ]
                        ]
                    )
                ]
            )
        ]
    )
, Tuple "Covered If …"
    ( Any
        ( Pre "any of:" )
        [ All
            ( Pre "all of:" )
            [ Any
                ( Pre "Is the Loss or Damage caused by" )
                [ Leaf "rodents ?"
                , Leaf "insects ?"
                , Leaf "vermin ?"
                , Leaf "birds ?"
                ]
            , Not
                ( Any
                    ( Pre "any of:" )
                    [ All
                        ( Pre "all of:" )
                        [ Leaf "is Loss or Damage to contents ?"
                        , Leaf "is Loss or Damage caused by birds ?"
                        ]
                    , All
                        ( Pre "all of:" )
                        [ Leaf "is Loss or Damage ensuing covered loss ?"
                        , Not
                            ( Any
                                ( Pre "any of:" )
                                [ Leaf "does any other exclusion apply ?"
                                , Any
                                    ( Pre "did an animal cause water to escape from" )
                                    [ Leaf "a household appliance ?"
                                    , Leaf "a swimming pool ?"
                                    , Leaf "a plumbing, heating, or air conditioning system ?"
                                    ]
                                ]
                            )
                        ]
                    ]
                )
            ]
        ]
    )
]
toplevelDefaultMarking :: Marking
toplevelDefaultMarking = Marking $ Map.fromFoldable []